#!/bin/bash
OLD_IFS=${IFS}

function create_view() {
	cat <<END
<?xml version="1.0"?>

<!-- Trasforma las descripciones de entidades -->
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:template match="/">
		<xsl:for-each select="Entities/Entity">
END

	echo -n "			<xsl:value-of select='Fields/Field[@Name=$1]/Value'/>"
	shift

	while [ -n "$1" ]; do
		echo -n "|<xsl:value-of select='Fields/Field[@Name=$1]/Value'/>"
		shift
	done

	cat <<END
<xsl:text>
</xsl:text>
		</xsl:for-each>
	</xsl:template>
</xsl:stylesheet>
END
}

function help {
	case "$1" in
		1)
			;;
		2)
			echo "Configura una vista de columnas de defectos."
			;;
	esac
}

function call {
	if [ "$1" == "help" ]; then
		help 2
		exit 0
	fi

	# Load defects fields
	FIELDS_FROM=${CACHE}/entity_defect_fields.csv
	while read field; do
		IFS='|'
		if [ -n "$field" ]; then
			tokens=($field)
			if [ "${tokens[5]}" = "true" ]; then
				REQUIRED="*"
			else
				REQUIRED=
			fi
	
			FIELD_LIST="${FIELD_LIST} ${tokens[1]} '${REQUIRED}${tokens[2]}' off"
		fi
	done < ${FIELDS_FROM}
	
	IFS=${OLD_IFS}
	
	if [ -z "${FIELD_LIST}" ]; then
		echo "No hay elementos"
		exit 1
	fi
	
	SELECTED_FIELDS=$(echo ${FIELD_LIST} | xargs dialog --stdout --checklist "Seleccion lista campos" 0 0 0)
	if [ "${PIPESTATUS[1]}" != 0 ]; then
		NAME=$(dialog --stdout --title "Nombre vista" --inputbox "Nombre de la vista de campos de defecto" 0 0)
		[ "$?" != 0 ] && exit 0
	fi
	
	[ ! -d ~/.hpqc/views ] && mkdir -p ~/.hpqc/views
	create_view ${SELECTED_FIELDS} > ~/.hpqc/views/${NAME}.view
}
